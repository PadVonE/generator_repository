package service

import (
	"context"
	"github.com/{{ .PackageStruct.GitCompanyName}}/{{ .PackageStruct.GitRepositoryName}}"
	"github.com/getsentry/sentry-go"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
	"{{ .PackageStruct.PackageNameForImport}}/entity"
)

func (s *Service) Update{{ .Name}}(_ context.Context, request *{{ .PackageStruct.PackageName}}.Update{{ .Name}}Request) (*{{ .PackageStruct.PackageName}}.{{ .Name}}, error) {
    item := entity.UpdateProtoTo{{ .Name}}(request)

    if err := s.DB.Save(&item).Error; err != nil {
        sentry.CaptureException(err)
        return nil, status.Error(codes.Internal, "internal error")
    }

    return entity.{{ .Name}}ToProto(&item), nil
}

