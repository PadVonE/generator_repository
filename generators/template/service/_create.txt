package service

import (
	"context"
	"github.com/{{ .PackageStruct.GitCompanyName}}/{{ .PackageStruct.GitRepositoryName}}"
	"github.com/getsentry/sentry-go"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
	"{{ .PackageStruct.PackageNameForImport}}/entity"
)

func (s *Service) Create{{ .Name}}(_ context.Context, request *{{ .PackageStruct.PackageName}}.Create{{ .Name}}Request) (*{{ .PackageStruct.PackageName}}.{{ .Name}}, error) {
		item := entity.CreateProtoTo{{ .Name}}(request)

	if err := s.DB.Create(&item).Error; err != nil {
		sentry.CaptureException(err)
		return nil, status.Error(codes.Internal, "internal error")
	}

	return entity.{{ .Name}}ToProto(&item), nil
}
