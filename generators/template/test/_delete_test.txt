package service

import (
	"context"
    "errors"
	"gorm.io/gorm"
	"github.com/{{ .PackageStruct.GitCompanyName}}/{{ .PackageStruct.GitRepositoryName}}"
	"{{ .PackageStruct.PackageNameForImport}}/entity"
{{ .Imports}}
)

func (s *SuiteTest) TestDelete{{ .Name}}() {
	contents :=[]*entity.{{ .Name}}{
{{ .FinishedStruct}}
	}


	for _, element := range contents {
	    err := s.Service.DB.Create(&element).Error
		if !s.NoError(err) {
			return
		}
	}

	request := &{{ .PackageStruct.PackageName}}.Delete{{ .Name}}Request{
		Id: contents[0].Id,
	}

	_, err := s.Service.Delete{{ .Name}}(context.Background(), request)
	if !s.NoError(err) {
    	return
    }


	get := entity.{{ .Name}}{}

    query := s.Service.DB.Model(&get)
    query = query.Where("id = ?", contents[0].Id)
    err = query.Take(&get).Error

	if s.True(errors.Is(err, gorm.ErrRecordNotFound)) {
		return
	}


   get = entity.{{ .Name}}{}

   query = s.Service.DB.Model(&get)
   query = query.Where("id = ?", contents[1].Id)
   err = query.Take(&get).Error

	if s.True(errors.Is(err, gorm.ErrRecordNotFound)) {
		return
	}
{{.TestList2}}
}
