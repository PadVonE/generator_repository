package service

import (
	"context"
	"github.com/{{ .PackageStruct.GitCompanyName}}/{{ .PackageStruct.GitRepositoryName}}"
	"{{ .PackageStruct.PackageNameForImport}}/entity"
{{ .Imports}}
)

func (s *SuiteTest) TestUpdate{{ .Name}}() {
	update{{ .Name}}Request :=[]*entity.{{ .Name}}{
{{ .FinishedStruct}}
	}


	for _, element := range update{{ .Name}}Request {
		_, err := s.Service.DB.Insert(element)
		if !s.NoError(err) {
			return
		}
	}

	request := &{{ .PackageStruct.PackageName}}.Update{{ .Name}}Request{
		Id: update{{ .Name}}Request[1].Id,
{{ .StructForRequest}}
	}


	response, err := s.Service.Update{{ .Name}}(context.Background(), request)
	if !s.NoError(err) {
		return
	}
	if !s.NotZero(response.Id) {
		return
	}

{{.TestList1}}

	get := entity.{{ .Name}}{}
	exist, err := s.Service.DB.ID(response.Id).Get(&get)
	if !s.NoError(err) {
		return
	}
	if !s.True(exist) {
		return
	}

	s.True(get.UpdatedAt.Nanosecond() > get.CreatedAt.Nanosecond())
{{.TestList2}}
}
